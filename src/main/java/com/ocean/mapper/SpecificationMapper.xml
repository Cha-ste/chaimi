<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ocean.mapper.SpecificationMapper">
  <resultMap id="BaseResultMap" type="com.ocean.entity.Specification">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="unit" jdbcType="CHAR" property="unit" />
    <result column="if_standard" jdbcType="TINYINT" property="ifStandard" />
    <result column="reserve" jdbcType="VARCHAR" property="reserve" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from specification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ocean.entity.Specification">
    insert into specification (name, remark,
      unit, if_standard, reserve
      )
    values (#{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{unit,jdbcType=CHAR}, #{ifStandard,jdbcType=TINYINT}, #{reserve,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ocean.entity.Specification">
    update specification
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=CHAR},
      if_standard = #{ifStandard,jdbcType=TINYINT},
      reserve = #{reserve,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, remark, unit, if_standard
    from specification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, remark, unit, if_standard
    from specification
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
    select id, name, remark, unit, if_standard
    from specification
    where 1 = 1
    <if test="map != null">
      <if test="map.keyword != null and map.keyword != ''">
        and (name like concat('%', #{map.keyword}, '%')
                 or remark like concat('%', #{map.keyword}, '%'))
      </if>
      <if test="map.ifStandar != null">
        and if_standard = #{map.ifStandard}
      </if>
    </if>
  </select>
  <delete id="deleteBatch" parameterType="list">
    delete from specification
    where id in
    <foreach collection="ids" index="index" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>