<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ocean.mapper.SpecificationItemMapper">
  <resultMap id="BaseResultMap" type="com.ocean.entity.SpecificationItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="specification_id" jdbcType="INTEGER" property="specificationId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="spend" jdbcType="VARCHAR" property="spend" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from specification_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ocean.entity.SpecificationItem">
    insert into specification_item (specification_id, name,
      spend)
    values (#{specificationId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{spend,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ocean.entity.SpecificationItem">
    update specification_item
    set specification_id = #{specificationId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      spend = #{spend,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, specification_id, name, spend
    from specification_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, specification_id, name, spend
    from specification_item
  </select>
  <select id="getListBySpecification" resultMap="BaseResultMap">
    select id, specification_id, name, spend
    from specification_item
    where specification_id = #{specificationId}
  </select>
  <select id="query" resultMap="BaseResultMap">
    select id, specification_id, name, spend
    from specification_item
    where 1 = 1
    <if test="map != null">
      <if test="map.keyword != null and map.keyword != ''">
        and name like concat('%', #{map.keyword}, '%')
      </if>
    </if>
  </select>
  <delete id="deleteBatch" parameterType="list">
    delete from specification_item
    where id in
    <foreach collection="ids" index="index" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>

</mapper>